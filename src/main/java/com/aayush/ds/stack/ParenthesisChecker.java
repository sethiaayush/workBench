package com.aayush.ds.stack;

import java.util.Stack;

public class ParenthesisChecker {

	public static void main(String[] args) {
		/*System.out.println(ispar("{([])}"));
		System.out.println(ispar("()"));
		System.out.println(ispar("([]"));
		System.out.println(ispar("[()]{}{[()()]()}"));
		System.out.println(ispar("[(])"));*/
		System.out.println(ispar("]}(]}(){}(()}[([}]))[{}})()]}()[((](]{({][[[}{({)({](}}{[}))}(}}{)]){[{))}}){}[})[{({))}{{}(([]][{(]())}())(}}][]}(]){[}{]}{]]})]{{}}{[][)]{[][()){]}(}[){){])[[))({)[)})}[{]{({(([}{[[(]}([[[[[[)}](()]((}(}]{{}}[{][[[[({)[](){((()()]{()([}[((}]{(}[](]])])(}[{]}{[[]]{}{[}([[)[()(}))[{[}})[}[((}[{]){}({{}]}{]{}[{({)[)}})]])(}{{{})}(){)))}[{}]]][[[)])[)(}{[[(]{]{(}[)((}})]]}[}}((]}([][][[[([](}})]]][}]}}(](}({){}]()])})])]}[(][{]]]{}{)[]())(}]([{}(})(]})}}}]}{]}}[))({[)[(]][]))]]{(()](]}[}[})[}}][[)]({]]})[(}[]}}}})([})([(]}[}}]){{(]{)}{}{]]]{(][({[))})){(]}}}[((}{{]]{)}(]{}{(}[{)[[[]}](((]{{[[[}{)]}{[([})})])}}[[([(})}){{]}{(][}])){]])[}])](])}{]][][})[))]]{)]]](({{(][}][}[[[()[)}{}{(){)}{([)}}[{]}{{}[[]((]{{})]))[(({}(}}[()}{)}[[)(}(([{][()(]]])[()}]((][}){)]([()}[{)[))(([[[([}}}}{([{()])()[)]({((}){}{[)[]({)})((}([(])}[}{])})}[{){](](]{{}[{(}[}{}[{}}])[[))[(}[)[})({{{){][[({][){)(}({((])](]}]{{{([)}()[}[[]}[{]})}({]]]}{}}]{(}]](([[])}[{])]))}([]({[))]([}[[)[])}(()[}[]([{{)((}]][]]{]{([()))))){][{]}]}}[[][[[}]{{)])){}{))(}([([[(])[){()})]}(}()](]}())[]})])}]{{({}}})[[({{))]{}(]}){{()]}((([{[]}])[]{{[[{{}})))))[)}{((]{})}()){]((})[[))})[(}}{)]][)}][){((})]}}}]}]{[]}(]{]{]{}][]}{{)(]})[)}}(][)]({}}{{{[))])[[])()((]{)}{([]{[{([))][)(([]()[}([{])]([}]{{(({](()}{)[])][[)}}{][}}}]}[(}[(){]}]{[)}})[]{({{))[](([]{)}]]()}((({][])]{[{[}([[)()]{[[({{{[])[]}((}[}{))({}}[[](][}(}]}}(}[]]]({])}}}(}{[]{]{}}]}}{])}[)([})[]{[}{{{[}))((})(]}((){(([({))(}{)})}}(}[(([{{]{)({](])[[([}}[{(([}(({{){){}}[)]]{[}{))]}[}}}[]{[]{}]}][][}])}]){}(([[({})(}([[]{[[(]({[(("));
	}

	static boolean ispar(String x) {
		if (x.length() % 2 != 0) {
			return false;
		}
		Stack<Character> charStack = new Stack<>();

		for (int i = 0; i < x.length(); i++) {
			if (x.charAt(i) == '{' || x.charAt(i) == '[' || x.charAt(i) == '(') {
				charStack.push(x.charAt(i));
			} else {
				if (x.charAt(i) == '}' && (charStack.empty() || charStack.pop() != '{')) {
					return false;
				}
				if (x.charAt(i) == ']' && (charStack.empty() || charStack.pop() != '[')) {
					return false;
				}
				if (x.charAt(i) == ')' && (charStack.empty() || charStack.pop() != '(')) {
					return false;
				}
			}

		}
		if (charStack.empty()) {
			return true;
		}
		return false;
	}
}
